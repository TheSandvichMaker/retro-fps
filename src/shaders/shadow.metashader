#include "common.hlsli"

@metashader
{
	exports = {
		shadow_draw_parameters_t = cbuffer {
			positions = StructuredBuffer(float3),
		},
	},

	draw_parameters = shadow_draw_parameters_t,

	shaders = {
		shadow_vs = { target = "vs_6_6" },
	},

	psos = {
		sun_shadows = { 
			vs = "shadow_vs",

			--// rasterizer
			cull_mode = "back",

			--// depth-stencil
			depth_test  = true,
			depth_write = true,
			depth_func  = "greater",
			dsv_format  = "d24_unorm_s8_uint",
		},
	},
}

struct VS_OUT
{
	float4 position : SV_Position;
};

VS_OUT shadow_vs(uint vertex_index : SV_VertexID)
{
	float3 position = draw.positions.Get().Load(vertex_index);

	VS_OUT OUT;
	OUT.position = mul(view.sun_matrix, float4(position, 1));
	return OUT;
}
