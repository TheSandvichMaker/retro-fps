#include "common.hlsli"

@metashader
{
	exports = {
		ui_visualize_heatmap_draw_parameters_t = cbuffer {
			heatmap = Texture2D(),
			scale   = float,
		},
	},

	draw_parameters = ui_visualize_heatmap_draw_parameters_t,

	shaders = {
		ui_visualize_heatmap_ps = { target = "ps_6_6" },
	},

	psos = {
		ui_visualize_heatmap = {
			vs = "fullscreen_triangle_vs",
			ps = "ui_visualize_heatmap_ps",

			render_targets = {
				{
					pf    = "r8g8b8a8_unorm_srgb",
					blend = blend_alpha(),
				},
			},
		},
	},
}

float4 ui_visualize_heatmap_ps(fullscreen_triangle_vs_out_t IN) : SV_Target
{
	uint2 co = uint2(IN.pos.xy);

	Texture2D heatmap = draw.heatmap.Get();

	float heatmap_value = draw.scale * heatmap.SampleLevel(df::s_linear_clamped, IN.uv, 0).r;

	float4 result = { 0, 0, 0, 0 };

	if (heatmap_value > 0.0f)
	{
		result.rgb = ColorMapTurbo(heatmap_value);
		result.a   = 0.5f;
	}

	return result;
}
