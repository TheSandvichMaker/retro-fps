// Generated by metagen.lua

#include "bindless.hlsli"

struct compute_test_draw_parameters_t
{
	df::Resource< StructuredBuffer< float > > input_buffer;
	uint3 pad0;
	df::Resource< RWStructuredBuffer< float > > output_buffer;
};

ConstantBuffer< compute_test_draw_parameters_t > draw : register(b0);

	
		[numthreads(128, 1, 1)]
		void MainCS(int id : SV_DispatchThreadID)
		{
			StructuredBuffer<float>   input_buffer  = draw.input_buffer .Get();
			RWStructuredBuffer<float> output_buffer = draw.output_buffer.Get();

			float input = input_buffer[id];

			// Super cool compute kernel
			float result = input * input;

			output_buffer[id] = result;
		}
	
	